apply plugin: 'com.android.library'
apply plugin: 'com.jakewharton.butterknife'
android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
    }
    buildTypes {
        debug {
            //applicationIdSuffix ".debug"
            buildConfigField "boolean", "ISDEBUG", "true"
            buildConfigField "boolean", "LOG", "true"
            //buildConfigField "boolean", "LOG_HTTP_CALLS", "true"
            //resValue "string", "app_name", "Example DEBUG"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            buildConfigField "boolean", "ISDEBUG", "false"
            buildConfigField "boolean", "LOG", "false"
            //buildConfigField "boolean", "LOG_HTTP_CALLS", "false"
            // resValue "string", "app_name", "Example"//替换应用名称
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile project(':lib_fragmentation_swipeback')
    // arouter 替换成最新版本, 需要注意的是api
    // 要与compiler匹配使用，均使用最新版可以保证兼容
//    compile rootProject.ext.dependencies["arouter-api"]
    //arouter
    annotationProcessor rootProject.ext.dependencies["arouter-compiler"]
}
